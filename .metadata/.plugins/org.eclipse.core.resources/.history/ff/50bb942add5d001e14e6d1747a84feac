package com.natwest.apigateway.configuration;

import org.springframework.context.annotation.Configuration;

@Configuration
public class CorsConfiguration {

	private static final String ALLOWED_HEADERS = "x-requested-with, authorization, Content-Type, Content-Length, Authorization, credential, X-XSRF-TOKEN";
	  private static final String ALLOWED_METHODS = "GET, PUT, POST, DELETE, OPTIONS, PATCH";
	  private static final String ALLOWED_ORIGIN = "*";
	  private static final String MAX_AGE = "7200"; //2 hours (2 * 60 * 60) 
	​
	  @Bean
	  public WebFilter corsFilter() {
	    return (ServerWebExchange ctx, WebFilterChain chain) -> {
	      ServerHttpRequest request = ctx.getRequest();
	      if (CorsUtils.isCorsRequest(request)) {
	        ServerHttpResponse response = ctx.getResponse();
	        HttpHeaders headers = response.getHeaders();
	        headers.add("Access-Control-Allow-Origin", ALLOWED_ORIGIN);
	        headers.add("Access-Control-Allow-Methods", ALLOWED_METHODS);
	        headers.add("Access-Control-Max-Age", MAX_AGE); //OPTION how long the results of a preflight request (that is the information contained in the Access-Control-Allow-Methods and Access-Control-Allow-Headers headers) can be cached. 
	        headers.add("Access-Control-Allow-Headers",ALLOWED_HEADERS);
	        if (request.getMethod() == HttpMethod.OPTIONS) {
	          response.setStatusCode(HttpStatus.OK);
	          return Mono.empty();
	        }
	      }
	      return chain.filter(ctx);
	    };
	  }
	​
	}
